spring:
  profiles:
    active: local
    group:
      local: local_server, common, secret

---
spring:
  config:
    activate:
      on-profile: common
  mybatis:
    mapper-locations: classpath:/mappers/**/*.xml
    type-aliases-package: com.Happy100BE.**.domain
    configuration:
      map-underscore-to-camel-case: true
  main:
    allow-bean-definition-overriding: true

server:
  port: 8080

logging:
  level:
    com.Happy100BE.Happy100: DEBUG
    org.springframework.security: INFO

---
spring:
  config:
    activate:
      on-profile: local_server
  datasource:
    url: ${DB_URL:jdbc:mysql://svc.sel3.cloudtype.app:30471/happy100?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      read-only:  false
react:
  server:
    protocol: http
    host: localhost
    port: 5173

---
spring:
  config:
    activate:
      on-profile: secret
jwt:
  secret: ${JWT_SECRET}
  issuer: ${JWT_ISSUER:happy100-auth}
  access-token-validity-seconds: ${JWT_ACCESS_TOKEN_VALIDITY_SECONDS:3600}

---
spring:
  config:
    activate:
      on-profile: common
  mail:
    host: ${MAIL_HOST:smtp.naver.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: ${MAIL_CONNECTION_TIMEOUT:5000}
          timeout: ${MAIL_READ_TIMEOUT:5000}
          writetimeout: ${MAIL_WRITE_TIMEOUT:5000}

---

server:
  port: 8080

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/oauth2/callback/google"
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub
